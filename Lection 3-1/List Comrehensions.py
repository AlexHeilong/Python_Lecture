# [exp for item in iterable]
# [exp for item in iterable (if conditional)]
# [exp <if conditional> for item in iterable (if conditional)]

# По-старинке:
# list = []
#
# for i in range(1, 101):
#     if i%2 == 0: # только четные значения в интервале от 1 до 100
#         list.append(i)
# print(list)

# list = []
#
# for i in range(1, 101):
#     #if i%2 == 0: # Если убрать это условие, то отобразятся все значения от 1 до 100
#         list.append(i)
# print(list)
#
# list = [i for i in range(1, 21)] # Это упращенный вариант списка выше (все значения)
# print(list) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
#
# list1 = [i for i in range(1, 21) if i%2 == 0] # Это упращенный вариант списка выше (только четные значения)
# print(list1) # [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
#
# # Создать пару каждого из чисел. Кортежи
# list2 = [(i, i) for i in range(1, 21) if i%2 == 0] # Это упращенный вариант списка выше (только четные значения)
# print(list2) # [(2, 2), (4, 4), (6, 6), (8, 8), (10, 10), (12, 12), (14, 14), (16, 16), (18, 18), (20, 20)]
#
# # С добавленем функции
# def f(x):
#     return x**3
# list3 = [f(i) for i in range(1, 21) if i%2 == 0] # Сперва делает четный список, затем все значения возводит в куб
# print(list3) # [8, 64, 216, 512, 1000, 1728, 2744, 4096, 5832, 8000]
#
# # Для наглядности варианта выше, сделаем пару: число - его куб
# def f(x):
#     return x**3
# list4 = [(i, f(i)) for i in range(1, 21) if i%2 == 0] # Пара: число - куб
# print(list4) # [(2, 8), (4, 64), (6, 216), (8, 512), (10, 1000), (12, 1728), (14, 2744), (16, 4096), (18, 5832), (20, 8000)]
